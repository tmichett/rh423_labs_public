---
- name: Create Certificate Authority on workstation
  import_playbook: create_ca.yml


- name: configure replica1 instance with custom cert
  hosts: replica1
  vars:
    instance_name: replica1
    inf_file: dscreate_replica1.inf
  tasks:
    - name: Check instance status (will fail if not found)
      command: dsctl {{ instance_name }} status
      register: instance_status
      ignore_errors: true

    - name: install instance when not running  
      block:

        - name: ensure packages are installed
          import_tasks: Tasks/install_packages.yml

        - name: ensure firewall ports are open
          import_tasks: Tasks/open_firewall.yml

        - name: copy inf file to server
          copy:
            src: "Files/{{ inf_file }}"
            dest: "/root/{{ inf_file }}"

        - name: use dscreate with file
          command: "dscreate from-file /root/{{ inf_file }}"

      when: instance_status.stdout.find('is running') == -1


    - name: configure CA certificate
      import_tasks: Tasks/add_CA_to_instance.yml

    - name: configure CA Trust Database
      import_tasks: Tasks/update_ca_trust.yml

    - name: Collect list of certificates
      command: dsconf {{ instance_name }} security certificate list 
      register: server_cert_list

    - name: Replace server cert
      block:

        - name: generate a CSR
          command: dsctl replica1 tls generate-server-cert-csr -s "CN=replica1.lab.example.com"

        - name: sign and update certificate
          import_tasks: Tasks/sign_replace_cert.yml
          vars:
            cert_nick: replica1-cert

      when: server_cert_list.stdout.find('replica1-cert') == -1

    - name: enable TLS
      command: dsconf replica1 config replace nsslapd-security=on
      notify: restart_instance


  handlers:
    - name: restart_instance
      command: dsctl {{ instance_name }} restart

     
